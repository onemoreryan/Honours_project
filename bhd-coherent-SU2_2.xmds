<?xml version="1.0" encoding="UTF-8"?>

<simulation xmds-version="2">
<name> bhd-coherent-SU2 </name>

<author> Ryan Kidd </author>
<description>
	The Bose-Hubbard model for the driven dimer with initial Bloch state and truncated Wigner evolution. This script obtains SU(2) operator expectation values and standard deviations.
</description>

<features>
	<openmp />
	<auto_vectorise />
	<globals>
		<![CDATA[
			real Jt;
			real tpole;
			real p2;
			real phi;
			real chi;
			real n;
		]]>
	</globals>
	<validation kind="run-time" />
	<arguments>
		<argument name="chi_ratio" type="real" default_value = "-1" />
		<argument name="mu" type="real" default_value = "1.5" />
		<argument name="omega" type="real" default_value = "0.5" />
		<argument name="N" type="real" default_value = "1000" />
		<argument name="n_ratio" type="real" default_value = "0.5" />
		<argument name="phi_ratio" type="real" default_value = "0.5" />
		<argument name="interval" type="real" default_value = "62.8318530718" />
		<argument name="paths" type="real" default_value = "10000" />
		<![CDATA[
			tpole = asin(sqrt(n/N));
			p2 = 0.5*sqrt(2*N + 1 + 2*sqrt(N*N + N));
			chi = chi_ratio/N;
			phi = phi_ratio*M_PI;
			n = n_ratio*N;
		]]>
	</arguments>
</features>

<geometry>
	<propagation_dimension> t </propagation_dimension>
</geometry>

<driver name="multi-path" paths="paths" />

<noise_vector name="noiseGauss" kind="gaussian" type="real" method="dsfmt" seed="791 207 830" >
	<components> da1r da1i da2 </components>
</noise_vector>

<noise_vector name="noiseUnif" kind="uniform" type="real" method="dsfmt" seed="209 885 942" >
	<components> theta2 </components>
</noise_vector>

<vector name="amplitudes" type="complex">
	<components> a1 a2 </components>
	<initialisation>
		<dependencies> noiseGauss noiseUnif </dependencies>
		<![CDATA[
			a1 = exp(-0.5*i*phi)*(cos(tpole)*0.5*(da1r + i*da1i) + sin(tpole)*(p2 + da2/(4*p2)) * (cos(2*M_PI*theta2) + i*sin(2*M_PI*theta2)));
			a2 = exp(0.5*i*phi)*(-sin(tpole)*0.5*(da1r + i*da1i) + cos(tpole)*(p2 + da2/(4*p2)) * (cos(2*M_PI*theta2) + i*sin(2*M_PI*theta2)));
		]]>
	</initialisation>
</vector>

<sequence>
	<integrate algorithm="ARK45" interval="interval" tolerance="1e-5" >
		<samples> 1000 </samples>
		<operators>
			<integration_vectors> amplitudes </integration_vectors>
			<![CDATA[
				Jt = 1 + mu*cos(omega*t);
				da1_dt = i*Jt*a2 - 2*i*chi*(mod2(a1) - 1)*a1;
				da2_dt = i*Jt*a1 - 2*i*chi*(mod2(a2) - 1)*a2;
			]]>
		</operators>
	</integrate>
</sequence>

<output format="hdf5" filename="bhd-coherent-SU2.xsil">
	<sampling_group initial_sample="yes">
		<dependencies> amplitudes </dependencies>
		<moments> x y z x2 y2 z2 </moments>
		<![CDATA[
			z = 0.5*(mod2(a2) - mod2(a1));
			y = 0.5*Re(-i*(conj(a2)*a1 - conj(a1)*a2));
			x = 0.5*Re(conj(a2)*a1 + conj(a1)*a2);
			z2 = z*z - 0.125;
			y2 = y*y - 0.125;
			x2 = x*x - 0.125;
		]]>
	</sampling_group>
</output>

</simulation>
