<?xml version="1.0" encoding="UTF-8"?>

<simulation xmds-version="2">
<name> bhd-poincare-highf </name>

<author> Ryan Kidd </author>
<description>
	The semiclassical Bose-Hubbard model for the driven dimer.
</description>

<features>
	<auto_vectorise />
	<cflags>
    <![CDATA[
			-lgsl -lgslcblas
    ]]>
	</cflags>
	<globals>
		<![CDATA[
			#include <gsl/gsl_sf_bessel.h>
			real Jt;
			real interval;
			real U1;
			real U2;
		]]>
	</globals>
	<validation kind="run-time" />
	<arguments>
		<argument name="U" type="real" default_value = "-1" />
		<argument name="J" type="real" default_value = "1.0" />
		<argument name="mu" type="real" default_value = "0.2" />
		<argument name="omega" type="real" default_value = "1.37" />
		<![CDATA[
			interval = 200*2*M_PI/omega;
			U1 = U*(1 - gsl_sf_bessel_J0(4*mu/omega));
			U2 = U*(1 + gsl_sf_bessel_J0(4*mu/omega));
			// U1 = 0.5*U*(1-0.765197686);
			// U2 = 0.5*U*(1+0.765197686);
		]]>
	</arguments>
</features>

<geometry>
	<propagation_dimension> t </propagation_dimension>
	<transverse_dimensions>
		<dimension name="z0" lattice="10" domain="(-0.49,0.49)" />
		<dimension name="phi0" lattice="10" domain="(-M_PI, M_PI)" />
	</transverse_dimensions>
</geometry>

<vector name="amplitudes" type="real">
	<components> z phi zf phif </components>
	<initialisation>
		<![CDATA[
			z = z0;
			phi = phi0;
			zf = z0;
			phif = phi0;
		]]>
	</initialisation>
</vector>

<sequence>
	<integrate algorithm="ARK45" interval="interval" tolerance="1e-7">
		<samples> 200 </samples>
		<operators>
			<integration_vectors> amplitudes </integration_vectors>
			<![CDATA[
				Jt = J*(1.0 + mu*cos(omega*t));
				dz_dt = 2*Jt*sqrt(0.25 - z*z)*sin(phi);
				dphi_dt = -4*U*z - 2*Jt*z/sqrt(0.25 - z*z)*cos(phi);
				dzf_dt = 2*sqrt(0.25 - zf*zf)*sin(phif) + 2*U1*(0.25-zf*zf)*cos(phif)*sin(phif);
				dphif_dt = -2*U2*zf - 2*zf/sqrt(0.25 - zf*zf)*cos(phif) + 2*U1*zf*sin(phif)*sin(phif);
			]]>
		</operators>
	</integrate>
</sequence>

<output format="hdf5" filename="bhd-poincare-highf.xsil">
	<sampling_group basis="z0 phi0" initial_sample="no">
		<moments> z1 phi1 z2 phi2 </moments>
		<dependencies>amplitudes</dependencies>
		<![CDATA[
			z1 = z;
			phi1 = phi;
			z2 = zf;
			phi2 = phif;
		]]>
	</sampling_group>
</output>

</simulation>
